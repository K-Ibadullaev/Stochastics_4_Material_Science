geom_text(aes(label=floor(export/1000)),
vjust=0, nudge_y = 40000)#add and align text
#annotations
#align text h/vjust according to point, nudge_x/y acc coords
ggplot(data=trades_total, mapping = aes(x=time,y=export))+
geom_area(alpha=0.5)+
geom_line()+
geom_point()+
geom_text(aes(label=floor(export/1000)),
vjust=0, nudge_y = 40000)#add and
#adding label text
dplyr::filter(sitc06 == 'Machinery and transport equipment', time == as.Date('2017-01-01')) %>%
ggplot(mapping = aes(x = partner, y = export)) +
geom_col(fill = 'plum4', color = 'black', size = 0.2) +
coord_flip() +
geom_label(aes(y = export / 2, labels=floor(export/1000)))
#adding label text
dplyr::filter(sitc06 == 'Machinery and transport equipment', time == as.Date('2017-01-01')) %>%
ggplot(mapping = aes(x = partner, y = export)) +
geom_col(fill = 'plum4', color = 'black', size = 0.2) +
coord_flip() +
geom_label(aes(y = export / 2, labels=floor(export/1000)))
#adding label text
trades %>%
dplyr::filter(sitc06 == 'Machinery and transport equipment', time == as.Date('2017-01-01')) %>%
ggplot(mapping = aes(x = partner, y = export)) +
geom_col(fill = 'plum4', color = 'black', size = 0.2) +
coord_flip() +
geom_label(aes(y = export / 2, labels=floor(export/1000)))
#adding label text
trades %>%
dplyr::filter(sitc06 == 'Machinery and transport equipment', time == as.Date('2017-01-01')) %>%
ggplot(mapping = aes(x = partner, y = export)) +
geom_col(fill = 'plum4', color = 'black', size = 0.2) +
coord_flip() +
geom_label(aes(y = export / 2, label = floor(export / 1000)))
#annotations &text
#align text h/vjust according to point, nudge_x/y acc coords
ggplot(data=trades_total, mapping = aes(x=time,y=export))+
geom_area(alpha=0.5)+
geom_line()+
geom_point()+
geom_text(aes(label=floor(export/1000)),
vjust=0, nudge_y = 40000)+#add text and annotation
annotate("text", x = as.Date('2009-01-01'), y = 550000,label='Drop', color='red')
#annotate region
ggplot(trades_type, mapping = aes(x = export, y = import, color = sitc06, size = time)) +
annotate("rect", xmin = 100000, xmax = 250000, ymin = 75000, ymax = 175000,  alpha = .2, color = 'black', size = 0.1) +
geom_point(alpha = 0.5) +
annotate("rect", xmin=10000, xmax=250000, ymin = 7500, ymax=175000,
alpha=.2,color=(geom_point(alpha=0.5)))+
annotate("text", x = 175000, y = 190000, label = "Chemicals", color = 'coral')
#annotate region
ggplot(trades_type, mapping = aes(x = export, y = import, color = sitc06, size = time)) +
annotate("rect", xmin = 100000, xmax = 250000, ymin = 75000, ymax = 175000,  alpha = .2, color = 'black', size = 0.1) +
geom_point(alpha = 0.5) +
annotate("rect", xmin=10000, xmax=250000, ymin = 7500, ymax=175000,
alpha=.2,color=(geom_point(alpha=0.5)))+
annotate("text", x = 175000, y = 190000, label = "Chemicals", color = 'coral')
#annotate region
ggplot(trades_type, mapping = aes(x = export, y = import, color = sitc06, size = time)) +
annotate("rect", xmin = 100000, xmax = 250000, ymin = 75000, ymax = 175000,  alpha = .2, color = 'black', size = 0.1) +
geom_point(alpha = 0.5) +
annotate("text", x = 175000, y = 190000, label = "Chemicals", color = 'coral')
#annotate region
ggplot(trades_type, mapping = aes(x = export, y = import, color = sitc06, size = time)) +
annotate("rect", xmin = 100000, xmax = 250000, ymin = 75000, ymax = 175000,  alpha = .2, color = 'black', size = 0.1) +
geom_point(alpha = 0.5) +
annotate("text", x = 175000, y = 190000, label = "Chemicals", color = 'coral')
trades %>%
dplyr::filter(sitc06 == 'Machinery and transport equipment') %>%
ggplot(mapping = aes(x = partner, y = import)) +
geom_col() +
scale_y_continuous(breaks = brks * 1e3, labels = brks) +
ggtitle('Import of machinery',
subtitle = 'key partners') +
coord_flip() +
facet_wrap(~time)
trades %>%
dplyr::filter(sitc06 == 'Machinery and transport equipment') %>%
ggplot(mapping = aes(x = partner, y = import)) +
geom_col() +
scale_y_continuous(breaks = brks * 1e3, labels = brks) +
ggtitle('Import of machinery',
subtitle = 'key partners') +
coord_flip() +
facet_wrap(~Country)
trades %>%
dplyr::filter(sitc06 == 'Machinery and transport equipment') %>%
ggplot(mapping = aes(x = partner, y = import)) +
geom_col() +
scale_y_continuous(breaks = brks * 1e3, labels = brks) +
ggtitle('Import of machinery',
subtitle = 'key partners') +
coord_flip() +
facet_wrap(~country)
trades %>%
dplyr::filter(sitc06 == 'Machinery and transport equipment') %>%
ggplot(mapping = aes(x = partner, y = import)) +
geom_col() +
scale_y_continuous(breaks = brks * 1e3, labels = brks) +
ggtitle('Import of machinery',
subtitle = 'key partners') +
coord_flip() +
facet_wrap(~time)
trades %>%
dplyr::filter(sitc06 == 'Machinery and transport equipment') %>%
ggplot(mapping = aes(x = partner, y = import)) +
geom_col() +
scale_y_continuous(breaks = brks * 1e3, labels = brks) +
ggtitle('Import of machinery',
subtitle = 'key partners') +
coord_flip() +
facet_wrap(~sitc06)
trades %>%
dplyr::filter(sitc06 == 'Machinery and transport equipment') %>%
ggplot(mapping = aes(x = partner, y = import)) +
geom_col() +
scale_y_continuous(breaks = brks * 1e3, labels = brks) +
ggtitle('Import of machinery',
subtitle = 'key partners') +
coord_flip() +
facet_wrap(~time)
#THEMES
theme_bw()
theme_bw()
#annotate region
ggplot(trades_type, mapping = aes(x = export, y = import, color = sitc06, size = time)) +
annotate("rect", xmin = 100000, xmax = 250000, ymin = 75000, ymax = 175000,  alpha = .2, color = 'black', size = 0.1) +
geom_point(alpha = 0.5) +
annotate("text", x = 175000, y = 190000, label = "Chemicals", color = 'coral')
theme_dark()
#annotate region
ggplot(trades_type, mapping = aes(x = export, y = import, color = sitc06, size = time)) +
annotate("rect", xmin = 100000, xmax = 250000, ymin = 75000, ymax = 175000,  alpha = .2, color = 'black', size = 0.1) +
geom_point(alpha = 0.5) +
annotate("text", x = 175000, y = 190000, label = "Chemicals", color = 'coral')
theme_dark()
#annotate region
theme_dark()
ggplot(trades_type, mapping = aes(x = export, y = import, color = sitc06, size = time)) +
annotate("rect", xmin = 100000, xmax = 250000, ymin = 75000, ymax = 175000,  alpha = .2, color = 'black', size = 0.1) +
geom_point(alpha = 0.5) +
annotate("text", x = 175000, y = 190000, label = "Chemicals", color = 'coral')
#PIE CHART
#leave par x='', theta='y
trades %>%
dplyr::filter(sitc06=='Machinery and transport equipment',
time==as.Date('2017-01-01')) %>%
ggplot(mapping = aes(x='', y=export, fill=partner))+
geom_col()+
coord_polar(theta = 'y')+
scale_y_sqrt()#flip to polar
library(circular)
library(tidyverse)
library(circular)
library(readxl)
library(NPCirc)
library(pracma)
library(lubridate)
library(gganimate)
library(gganimate)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(circular)
library(readxl)
library(NPCirc)
library(pracma)
library(lubridate)
library(gganimate)
intall.packages(library(tidyverse)
library(circular)
library(readxl)
library(NPCirc)
library(pracma)
library(lubridate)
library(gganimate))
intall.packages(library(tidyverse))
install.packages(library(tidyverse))
install.packages(library(tidyverse))
install.packages(library(tidyverse))
install.packages(library(tidyverse))
install.packages(library(tidyverse))
install.packages("gmGeostats", dependencies=TRUE)
r<-5
r
myv1 <-c(1,2,3);
mzv2 <- c(5,63,4)
mtv <- c(mv1,mzv2)
mtv <- c(myv1,mzv2)
mtv
3:27
rp = rep(3, times=6)
rp
sort(mtv)
length(mtv)
mtv[-1]
mtv
mtv[-5]
mtv[c(1,3,5)]
mtv[2:4]
c(3, rep(mtv[4], times=5),3:1)
mtv[-c(1,3)]
foo <- 5.5:0.7
foo
foo <- 5.5:0.7,2
foo <- 5.5:0.7:3
foo <- 5.5:0.7
foo <- 5.5:0.5
foo
bar <-c(1,-1)
foo*bar
sum(foo)
prod(bar)
prod(foo)
rivs = data("rivers")
names(rivs)
head(rivs)
data("ice.river")
#reading and writing files
data()# all preloaded data sets
rivs = read.tables(data("rivers"))
rivs = read.table(data("rivers"))
library(help="datasets")
library(help="datasets")
library(tseries)
rivs = read.table(data("ice.rivers"))
rivs = (data("ice.rivers"))
rivs = data("ice.rivers")
rivs = data("ice.river")
head(rivs)
rivs
library(tseries)
data("ice.river")
head(ice.river)
data("ice.river")
head(ice.river)
rivs = data("ice.river")
rivs
head(ice.river)
(head(rivs))
rivs = data("ice.river")
library(help="datasets")
rivs = as.data.frame(data("ice.river"))
rivs
rivs = as.data.frame(ice.river)
rivs
head(rivs)
tapply(rivs$temp,INDEX = rivs$flow.vat FUN = mean)
tapply(rivs$temp,INDEX = rivs$flow.vat, FUN = mean)
tapply(rivs$flow.vat,INDEX =rivs$temp , FUN = mean)
tapply(rivs$flow.vat[1:10],INDEX =rivs$temp[1:10] , FUN = mean)
#lapply
baz <- list(aa=c(3.4,1),bb=matrix(1:4,2,2),cc=matrix(c(T,T,F,T,F,F),3,2),
dd="string here",ee=matrix(c("red","green","blue","yellow")))
lapply(baz, FUN = is.matrix)
lapply(baz, FUN = is.matrix) #return list form
sapply(baz,FUN=is.matrix) #array form
#repeat
fib.a =1
fib.b =1
repeat{
tmp=fib.a + fib.b
fib.a =fib.b
fib.b =tmp
cat(fib.b,", ",sep="")
if(fib.b>150){
cat("BREAK NOW...\n")
break
}
}
myfib = function(){
fib.a = 1
fib.b= 1
cat(fib.a,", ",fib.b,", ",sep="")
repeat{
tmp = fib.a + fib.b
fib.a = fib.b
fib.b = temp
cat(fib.b , ", ",sep = "" )
if (fib.b>150){
cat("break now")
break
}
}
}
source('C:/Users/Anaconda/Rscripts/r_common/write_func.R')
myfib = function(){
fib.a = 1
fib.b= 1
cat(fib.a,", ",fib.b,", ",sep="")
repeat{
tmp = fib.a + fib.b
fib.a = fib.b
fib.b = temp
cat(fib.b , ", ",sep = "" )
if (fib.b>150){
cat("break now")
break
}
}
}
myfib = function(){
fib.a = 1
fib.b= 1
cat(fib.a,", ",fib.b,", ",sep="")
repeat{
tmp = fib.a + fib.b
fib.a = fib.b
fib.b = temp
cat(fib.b , ", ",sep = "" )
if (fib.b>150){
cat("break now")
break
}
}
}
myfib()
myfib()
myfib = function(){
fib.a = 1
fib.b= 1
cat(fib.a,", ",fib.b,", ",sep="")
repeat{
tmp = fib.a + fib.b
fib.a = fib.b
fib.b = tmp
cat(fib.b , ", ",sep = "" )
if (fib.b>150){
cat("break now")
break
}
}
}
myfib()
if (fib.b>tresh){
cat("break now")
break
}
myfib = function(thresh){
fib.a = 1
fib.b= 1
cat(fib.a,", ",fib.b,", ",sep="")
repeat{
tmp = fib.a + fib.b
fib.a = fib.b
fib.b = tmp
cat(fib.b , ", ",sep = "" )
if (fib.b>tresh){
cat("break now")
break
}
}
}
myfib(thresh = 20)
if (fib.b>thresh){
cat("break now")
break
}
myfib = function(thresh){
fib.a = 1
fib.b= 1
cat(fib.a,", ",fib.b,", ",sep="")
repeat{
tmp = fib.a + fib.b
fib.a = fib.b
fib.b = tmp
cat(fib.b , ", ",sep = "" )
if (fib.b>thresh){
cat("break now")
break
}
}
}
myfib(thresh = 20)
return(fibseq)
vecfib = function(thresh){
fib.seq =c(1,1)
counter =2
repeat{
fib.seq= c(fib.seq, fib.seq[counter-1]+fib.seq[counter])
counter = counter +1
if (fib.seq[counter]>thresh){
break
}
}
return(fibseq)
}
vecfib(300)
return(fib.seq)
return(fib.seq)
vecfib(300)
vecfib = function(thresh){
fibseq =c(1,1)
counter =2
repeat{
fibseq= c(fibseq, fibseq[counter-1]+fibseq[counter])
counter = counter +1
if (fibseq[counter]>thresh){
break
}
}
return(fibseq)
}
vecfib(24)
a =myfib(12)
a
b =vecfib(24)
b
# Load contributed R package 'spatstat', and, if necessary, install it beforehand:
if(!require(spatstat)) {install.packages("spatstat"); require(spatstat)}
# That means, if a contributed R package has b\een already installed,
# then it suffices to load it by running 'require(name_of_package)' or 'library(name_of_package)'.
library(spatstat)
bronzefilter # This is a real marked point pattern from the package 'spatstat'.
plot(bronzefilter) # The values of real-valued marks are indicated by different circle sizes.
plot(unmark(bronzefilter),main="centers",pch=20) # Shows only the centers of the mark point pattern 'bronzefilter'.
# Load contributed R package 'EBImage', and, if necessary, install it beforehand:
if(!require(EBImage)) {
install.packages("BiocManager", version = "3.11")
BiocManager::install("EBImage", version = "3.11")
require(EBImage)
}
install.packages("BiocManager", version = "3.11")
library(EBImage)
# Load contributed R package 'EBImage', and, if necessary, install it beforehand:
if(!require(EBImage)) {
install.packages("BiocManager")
BiocManager::install("EBImage")
require(EBImage)
}
install.packages("BiocManager")
library(EBImage)
install.packages(EBImage)
install.packages("EBImage")
install.package("EBImage")
install.packageы("EBImage")
install.packages("EBImage")
# Load contributed R package 'EBImage', and, if necessary, install it beforehand:
if(!require(EBImage)) {
install.packages("BiocManager")
BiocManager::install("EBImage")
require(EBImage)
}
# Load contributed R package 'EBImage', and, if necessary, install it beforehand:
if(!require(EBImage)) {
install.packages("BiocManager")
BiocManager::install("EBImage")
require(EBImage)
}
# Load contributed R package 'EBImage', and, if necessary, install it beforehand:
if(!require(EBImage)) {
install.packages("BiocManager")
BiocManager::install("EBImage")
require(EBImage)
}
source('C:/Users/Anaconda/Rscripts/StoMe/3.R')
source('C:/Users/Anaconda/Rscripts/StoMe/project/t4/Task4.R', echo=TRUE)
setwd("C:/Users/Anaconda/Rscripts/StoMe/project/t4")
source('C:/Users/Anaconda/Rscripts/StoMe/project/t4/Task4.R', echo=TRUE)
boxplot(simL5[1,],simL10[1,],simL15[1,], ylab=expression(A[A]),
names = c("lambda 5","lambda 10","lambda 15"),main= expression(A[A]))
abline(h=c(AmeanL5,AmeanL10,AmeanL15),col=c(2,3,4)) # mean value
boxplot(simL5[2,],simL10[2,],simL15[2,], ylab=expression(L[A]),
names = c("lambda 5","lambda 10","lambda 15"),main= expression(L[A]))
abline(h=c(LmeanL5,LmeanL10,LmeanL15),col=c(2,3,4))# mean value
boxplot(simL5[3,],simL10[3,],simL15[3,], ylab=expression(X[A]),
names = c("lambda 5","lambda 10","lambda 15"),main= expression(X[A]))
abline(h=c(XimeanL5,XimeanL10,XimeanL15),col=c(2,3,4)) # mean value
data = df()
data = data.frame()
data = data.frame(colnames(c("A mean","A std","L mean","L std","X mean","X std")))
colnames(data)
data
data = data.frame(row.names = c("Lambda 5","Lambda 10","Lambda 15"),
colnames=c("A mean","A std","L mean","L std","X mean","X std"))
data = data.frame(row.names =  c("Lambda 5","Lambda 10","Lambda 15"),
colnames=c("A mean","A std","L mean","L std","X mean","X std"))
data = data.frame(row.names =  c("Lambda 5","Lambda 10","Lambda 15"),
colnames=c("Model\Par","A mean","A std","L mean","L std","X mean","X std"))
data = data.frame(row.names =  c("Lambda 5","Lambda 10","Lambda 15"),
colnames=c("Model\Par","A mean","A std","L mean","L std","X mean","X std"))
data = data.frame(row.names =  c("Lambda 5","Lambda 10","Lambda 15"),
colnames=c("Model\Param","A mean","A std","L mean","L std","X mean","X std"))
data = data.frame(row.names =  c("Lambda 5","Lambda 10","Lambda 15"),
colnames=c("Model/Param","A mean","A std","L mean","L std","X mean","X std"))
total = data.frame(Model=c("lambda 5","lambda 10","lambda 15"),
A_mean = c(AmeanL5,AmeanL10,AmeanL15),A_std = c(AsdL5,AsdL10,AsdL15),
L_mean = c(LmeanL5,LmeanL10,LmeanL15),L_std = c(LsdL5,LsdL10,LsdL15),
X_mean = c(XimeanL5,XimeanL10,XimeanL15),X_std = c(XisdL5,XisdL10,XisdL15),
)
total = data.frame(Model=c("lambda 5","lambda 10","lambda 15"),
A_mean = c(AmeanL5,AmeanL10,AmeanL15),A_std = c(AsdL5,AsdL10,AsdL15),
L_mean = c(LmeanL5,LmeanL10,LmeanL15),L_std = c(LsdL5,LsdL10,LsdL15),
X_mean = c(XimeanL5,XimeanL10,XimeanL15),X_std = c(XisdL5,XisdL10,XisdL15)
)
total
View(starwars)
View(starwars)
write.table(x=total, file = "total_task4.xlsx")
read_excel("total_task4.xlsx")
mytab = read.table(file=file.choose(), header=TRUE, sep=" ",
na.strings="*",stringsAsFactors=F)
View(mytab)
setwd("C:/Users/Anaconda/Rscripts/StoMe/project/t4")
source("fcts.r")
mytab = read.table(file=file.choose(), header=TRUE, sep=" ",
na.strings="*",stringsAsFactors=F)
write.table(x=mytab, file = "total_tsk4.csv",sep=" ")
write.table(x=mytab, file = "total_tsk4.xlsx",sep=" ")
write.table(x=mytab, file = "total_tsk4.xlsx",sep="| ")
write.table(x=mytab, file = "total_tsk4.txt",sep="| ")
